<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd ">

    <!-- Определяем папку, в которой будем искать DAO компоненты (@Repository) -->
    <!--<context:component-scan base-package="mvc.repositories"/>-->

    <!-- Определяем папку, в которой будем искать классы отнаследованные от JpaRepository -->
    <jpa:repositories base-package="mvc.repositories"/>

    <!-- Настраивает управление транзакциями с помощью аннотации @Transactional -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Менеджер транзакций -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
          p:entityManagerFactory-ref="entityManagerFactory"/>

    <bean id="hibernatePersistenceProvider" class="org.hibernate.jpa.HibernatePersistenceProvider"/>

    <!-- Create default configuration for Hibernate -->
    <bean id="hibernateJpaVendorAdapter"
          class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

    <!-- Настройки бина dataSource будем хранить в отдельном файле, определяем где именно -->
    <bean id="placeholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="classpath:jdbc.properties"/>

    <!-- Настройки подключения к БД, бин dataSource -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close"
          p:driverClassName="${jdbc.driverClassName}"
          p:url="${jdbc.url}"
          p:username="${jdbc.username}"
          p:password="${jdbc.password}"
          p:initialSize="${jdbc.initialSize}"
          p:maxActive="${jdbc.maxActive}"/>

    <!-- Настройки Entity Manager для JPA -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          p:dataSource-ref="dataSource"
          p:packagesToScan="mvc.common"
          p:persistenceProvider-ref="hibernatePersistenceProvider"
          p:jpaVendorAdapter-ref="hibernateJpaVendorAdapter">
        <property name="jpaProperties">
            <props>
                <prop key="db.hibernate.dialect">${hibernate.dialect}</prop><!-- SQL диалект -->
                <prop key="db.hibernate.show_sql">${hibernate.show_sql}</prop><!-- Вывод в консоль SQL-запросов -->
                <prop key="db.hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}
                </prop><!-- Автообновление структуры БД -->
            </props>
        </property>
    </bean>

</beans>
